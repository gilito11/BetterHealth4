name: Generar Reporte de Issues

on:
  schedule:
    - cron: "0 0 * * 1"  # Se ejecuta cada lunes a las 00:00 UTC
  workflow_dispatch:  # Permite ejecución manual

permissions:
  contents: write
  issues: read

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v4

      - name: 🌍 Instalar localización en español
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen es_ES.UTF-8
          sudo update-locale LANG=es_ES.UTF-8
          export LANG=es_ES.UTF-8
          export LC_ALL=es_ES.UTF-8

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Instalar dependencias
        run: pip install requests matplotlib

      - name: 🧑‍💻 Obtener los datos de los issues desde GitHub
        run: |
          issues=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "https://api.github.com/repos/${{ github.repository }}/issues?state=all&per_page=100")
          echo "$issues" > issues.json
          echo "ISSUES_FILE=issues.json" >> $GITHUB_ENV

      - name: 📊 Ejecutar el script de generación de gráficos
        run: python .github/scripts/scriptrunchart.py  # Ajusta la ruta si es necesario

      - name: 📂 Mover gráficos a la carpeta grafico_historial/
        run: |
          mkdir -p grafico_historial  # Crear la carpeta en el repositorio si no existe
          mv grafico_historial/*.png <destino>

      - name: 📝 Hacer commit y push de los gráficos
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add grafico_historial/  # Agregar los gráficos al commit
          git commit -m "📊 Actualizar gráficos de issues - Semana $(date +'%V %B')" || echo "Sin cambios para commitear"
          git push  # Hacer push de los cambios al repositorio

        continue-on-error: true
