name: Generar Reporte de Issues

on:
  schedule:
    - cron: "0 0 * * 1"  # Se ejecuta cada lunes a las 00:00 UTC
  workflow_dispatch:  # Permite ejecuci√≥n manual

permissions:
  contents: write
  issues: read

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v4

      - name: üåç Instalar localizaci√≥n en espa√±ol
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen es_ES.UTF-8
          sudo update-locale LANG=es_ES.UTF-8
          export LANG=es_ES.UTF-8
          export LC_ALL=es_ES.UTF-8

      - name: üêç Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ Instalar dependencias
        run: pip install requests matplotlib

      - name: üßë‚Äçüíª Obtener los datos de los issues desde GitHub
        run: |
          issues=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "https://api.github.com/repos/${{ github.repository }}/issues?state=all&per_page=100")
          echo "$issues" > issues.json
          echo "ISSUES_FILE=issues.json" >> $GITHUB_ENV

      - name: üìä Ejecutar el script de generaci√≥n de gr√°ficos
        run: python .github/scripts/scriptrunchart.py  # Ajusta la ruta si es necesario

       # Subir los gr√°ficos como artifacts
      - name: Subir gr√°ficos como artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gr√°ficos  # Nombre del artifact que puedes usar para identificarlo
          path: output/*.png

        continue-on-error: true
